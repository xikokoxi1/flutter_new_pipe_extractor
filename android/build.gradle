group = "dev.krtirtho.flutter_new_pipe_extractor"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "1.8.22"
    repositories {
        maven { url 'https://jitpack.io' }
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.1.4")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
        google()
        mavenCentral()
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    namespace = "dev.krtirtho.flutter_new_pipe_extractor"

    compileSdk = 35

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        // Sets Java compatibility to Java 8
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        multiDexEnabled true
        minSdk = 21
    }

    dependencies {
        implementation 'com.github.TeamNewPipe:NewPipeExtractor:master-SNAPSHOT'
        implementation "com.squareup.okhttp3:okhttp:4.12.0"
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'

        coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'

        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
